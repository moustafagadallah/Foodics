{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-menu_4-md.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as getIonMode, c as createEvent, k as getConnect, h, e as getElement, H as Host } from './chunk-84f6bf13.js';\nimport { b as config } from './chunk-1074393c.js';\nimport { c as createColorClasses } from './chunk-ba834eff.js';\nimport { i as isEndSide, b as assert } from './chunk-c90aaa66.js';\nimport { GESTURE_CONTROLLER } from './index-8421816f.js';\n\nclass Menu {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.mode = getIonMode(this);\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        /**\n         * If `true`, the menu is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Which side of the view the menu should be placed.\n         */\n        this.side = 'start';\n        /**\n         * If `true`, swiping the menu is enabled.\n         */\n        this.swipeGesture = true;\n        /**\n         * The edge threshold for dragging the menu open.\n         * If a drag/swipe happens over this value, the menu is not triggered.\n         */\n        this.maxEdgeStart = 50;\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n        this.lazyMenuCtrl = getConnect(this, \"ion-menu-controller\");\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async componentWillLoad() {\n        if (this.type === undefined) {\n            this.type = config.get('menuType', this.mode === 'ios' ? 'reveal' : 'overlay');\n        }\n        const menuCtrl = this.menuCtrl = await this.lazyMenuCtrl.componentOnReady().then(p => p._getInstance());\n        const el = this.el;\n        const parent = el.parentNode;\n        const content = this.contentId !== undefined\n            ? document.getElementById(this.contentId)\n            : parent && parent.querySelector && parent.querySelector('[main]');\n        if (!content || !content.tagName) {\n            // requires content element\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuCtrl._register(this);\n        this.gesture = (await import('./index-8421816f.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            canStart: ev => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    componentDidLoad() {\n        this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n    }\n    componentDidUnload() {\n        this.blocker.destroy();\n        this.menuCtrl._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        this.isPaneVisible = ev.detail.isPane(this.el);\n        this.updateState();\n    }\n    onBackdropClick(ev) {\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = (ev.composedPath)\n                ? !ev.composedPath().includes(this.menuInnerEl)\n                : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close();\n            }\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true) {\n        return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true) {\n        return this.menuCtrl._setOpen(this, shouldOpen, animated);\n    }\n    async _setOpen(shouldOpen, animated = true) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        this.afterAnimation(shouldOpen);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        if (width === this.width && this.animation !== undefined) {\n            return;\n        }\n        this.width = width;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        this.animation = await this.menuCtrl._createAnimation(this.type, this);\n    }\n    async startAnimation(shouldOpen, animated) {\n        const ani = this.animation.reverse(!shouldOpen);\n        if (animated) {\n            await ani.playAsync();\n        }\n        else {\n            ani.playSync();\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        if (!this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n            // TODO error\n        }\n        else if (this.menuCtrl.getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation.reverse(this._isOpen).progressStart();\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep(stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\n            : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        const missing = shouldComplete ? 1 - stepValue : stepValue;\n        const missingDistance = missing * width;\n        let realDur = 0;\n        if (missingDistance > 5) {\n            const dur = missingDistance / Math.abs(velocity);\n            realDur = Math.min(dur, 300);\n        }\n        this.lastOnEnd = detail.timeStamp;\n        this.animation\n            .onFinish(() => this.afterAnimation(shouldOpen), {\n            clearExistingCallbacks: true,\n            oneTimeCallback: true\n        })\n            .progressEnd(shouldComplete, stepValue, realDur);\n    }\n    beforeAnimation(shouldOpen) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit();\n        }\n    }\n    afterAnimation(isOpen) {\n        assert(this.isAnimating, '_before() should be called while animating');\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            // add css class\n            if (this.contentEl) {\n                this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            }\n            // emit open event\n            this.ionDidOpen.emit();\n        }\n        else {\n            // remove css classes\n            this.el.classList.remove(SHOW_MENU);\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            // emit close event\n            this.ionDidClose.emit();\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.setDisabled(!isActive || !this.swipeGesture);\n        }\n        // Close menu immediately\n        if (!isActive && this._isOpen) {\n            // close if this menu is open, and should not be enabled\n            this.forceClosing();\n        }\n        if (!this.disabled && this.menuCtrl) {\n            this.menuCtrl._setActiveMenu(this);\n        }\n        assert(!this.isAnimating, 'can not be animating');\n    }\n    forceClosing() {\n        assert(this._isOpen, 'menu cannot be closed');\n        this.isAnimating = true;\n        const ani = this.animation.reverse(true);\n        ani.playSync();\n        this.afterAnimation(false);\n    }\n    hostData() {\n        const { isEndSide, type, disabled, isPaneVisible } = this;\n        return {\n            role: 'navigation',\n            class: {\n                [`${this.mode}`]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                'menu-side-end': isEndSide,\n                'menu-side-start': !isEndSide,\n                'menu-pane-visible': isPaneVisible\n            }\n        };\n    }\n    __stencil_render() {\n        return [\n            h(\"div\", { class: \"menu-inner\", ref: el => this.menuInnerEl = el }, h(\"slot\", null)),\n            h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false })\n        ];\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n    render() { return h(Host, this.hostData(), this.__stencil_render()); }\n    static get style() { return \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color,#fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,0,0);transform:translate3d(-9999px,0,0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host-context([dir=rtl]) .menu-inner,[dir=rtl] .menu-inner{left:unset;right:unset;left:auto;right:0;-webkit-transform:translate3d(calc(-1 * -9999px),0,0);transform:translate3d(calc(-1 * -9999px),0,0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto}ion-backdrop{display:none;opacity:.01;z-index:-1}\\@media (max-width:340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translateZ(0);transform:translateZ(0)}:host(.menu-type-overlay){z-index:80}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none!important;transform:none!important;-webkit-box-shadow:none!important;box-shadow:none!important}:host(.menu-pane-visible) ion-backdrop{display:hidden!important}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18);box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18)}\"; }\n}\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\n\n// Get the menu controller element\r\nconst getMenuController = (doc) => {\r\n    const menuControllerElement = doc.querySelector('ion-menu-controller');\r\n    if (!menuControllerElement) {\r\n        return Promise.resolve(undefined);\r\n    }\r\n    return menuControllerElement.componentOnReady();\r\n};\r\n// Given a menu, toggle it\r\nconst toggleMenu = async (menu) => {\r\n    const menuCtrl = await getMenuController(document);\r\n    if (menuCtrl) {\r\n        const menuEl = await menuCtrl.get(menu);\r\n        if (menuEl) {\r\n            menuCtrl.toggle(menu);\r\n        }\r\n    }\r\n};\r\n// Given a menu, return whether or not the menu toggle should be visible\r\nconst updateVisibility = async (menu) => {\r\n    const menuCtrl = await getMenuController(document);\r\n    if (menuCtrl) {\r\n        const menuEl = await menuCtrl.get(menu);\r\n        if (menuEl && await menuEl.isActive()) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\n\nclass MenuButton {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the user cannot interact with the menu button.\n         */\n        this.disabled = false;\n        /**\n         * Automatically hides the menu button when the corresponding menu is not active\n         */\n        this.autoHide = true;\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        this.setVisibility = async () => {\n            this.visible = await updateVisibility(this.menu);\n        };\n        this.onClick = async () => {\n            await toggleMenu(this.menu);\n        };\n    }\n    async componentDidLoad() {\n        await this.setVisibility();\n    }\n    async visibilityChanged() {\n        await this.setVisibility();\n    }\n    render() {\n        const { color, disabled } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', 'menu');\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type\n        };\n        return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: Object.assign({ [mode]: true }, createColorClasses(color), { 'button': true, 'menu-button-hidden': hidden, 'menu-button-disabled': disabled, 'ion-activatable': true, 'ion-focusable': true }) }, h(\"button\", Object.assign({}, attrs, { disabled: this.disabled, class: \"button-native\" }), h(\"slot\", null, h(\"ion-icon\", { icon: menuIcon, mode: mode, lazy: false })), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n    }\n    static get style() { return \":host{--background:transparent;--color-focused:var(--color);--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:.5;pointer-events:none}\\@media (any-hover:hover){:host(:hover) .button-native{background:var(--background-hover);color:var(--color-hover)}}:host(.ion-focused) .button-native{background:var(--background-focused);color:var(--color-focused)}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host-context(ion-toolbar:not(.ion-color)){color:var(--ion-toolbar-color,var(--color))}:host{--background-focused:rgba(66,66,66,0.24);--background-hover:rgba(66,66,66,0.08);--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:48px;height:48px;font-size:24px}\\@media (any-hover:hover){:host(.ion-color:hover) .button-native{background:rgba(var(--ion-color-base-rgb),.08)}}:host(.ion-color.ion-focused) .button-native{background:rgba(var(--ion-color-base-rgb),.24);color:var(--ion-color-base)}\"; }\n}\n\n/**\r\n * baseAnimation\r\n * Base class which is extended by the various types. Each\r\n * type will provide their own animations for open and close\r\n * and registers itself with Menu.\r\n */\r\nconst baseAnimation = (AnimationC) => {\r\n    // https://material.io/guidelines/motion/movement.html#movement-movement-in-out-of-screen-bounds\r\n    // https://material.io/guidelines/motion/duration-easing.html#duration-easing-natural-easing-curves\r\n    // \"Apply the sharp curve to items temporarily leaving the screen that may return\r\n    // from the same exit point. When they return, use the deceleration curve. On mobile,\r\n    // this transition typically occurs over 300ms\" -- MD Motion Guide\r\n    return Promise.resolve(new AnimationC()\r\n        .easing('cubic-bezier(0.0, 0.0, 0.2, 1)') // Deceleration curve (Entering the screen)\r\n        .easingReverse('cubic-bezier(0.4, 0.0, 0.6, 1)') // Sharp curve (Temporarily leaving the screen)\r\n        .duration(300));\r\n};\n\nconst BOX_SHADOW_WIDTH = 8;\r\n/**\r\n * Menu Overlay Type\r\n * The menu slides over the content. The content\r\n * itself, which is under the menu, does not move.\r\n */\r\nconst menuOverlayAnimation = (AnimationC, _, menu) => {\r\n    let closedX;\r\n    let openedX;\r\n    const width = menu.width + BOX_SHADOW_WIDTH;\r\n    if (menu.isEndSide) {\r\n        // right side\r\n        closedX = width + 'px';\r\n        openedX = '0px';\r\n    }\r\n    else {\r\n        // left side\r\n        closedX = -width + 'px';\r\n        openedX = '0px';\r\n    }\r\n    const menuAnimation = new AnimationC()\r\n        .addElement(menu.menuInnerEl)\r\n        .fromTo('translateX', closedX, openedX);\r\n    const backdropAnimation = new AnimationC()\r\n        .addElement(menu.backdropEl)\r\n        .fromTo('opacity', 0.01, 0.32);\r\n    return baseAnimation(AnimationC).then(animation => {\r\n        return animation.add(menuAnimation)\r\n            .add(backdropAnimation);\r\n    });\r\n};\n\n/**\r\n * Menu Push Type\r\n * The content slides over to reveal the menu underneath.\r\n * The menu itself also slides over to reveal its bad self.\r\n */\r\nconst menuPushAnimation = (AnimationC, _, menu) => {\r\n    let contentOpenedX;\r\n    let menuClosedX;\r\n    const width = menu.width;\r\n    if (menu.isEndSide) {\r\n        contentOpenedX = -width + 'px';\r\n        menuClosedX = width + 'px';\r\n    }\r\n    else {\r\n        contentOpenedX = width + 'px';\r\n        menuClosedX = -width + 'px';\r\n    }\r\n    const menuAnimation = new AnimationC()\r\n        .addElement(menu.menuInnerEl)\r\n        .fromTo('translateX', menuClosedX, '0px');\r\n    const contentAnimation = new AnimationC()\r\n        .addElement(menu.contentEl)\r\n        .fromTo('translateX', '0px', contentOpenedX);\r\n    const backdropAnimation = new AnimationC()\r\n        .addElement(menu.backdropEl)\r\n        .fromTo('opacity', 0.01, 0.32);\r\n    return baseAnimation(AnimationC).then(animation => {\r\n        return animation.add(menuAnimation)\r\n            .add(backdropAnimation)\r\n            .add(contentAnimation);\r\n    });\r\n};\n\n/**\r\n * Menu Reveal Type\r\n * The content slides over to reveal the menu underneath.\r\n * The menu itself, which is under the content, does not move.\r\n */\r\nconst menuRevealAnimation = (AnimationC, _, menu) => {\r\n    const openedX = (menu.width * (menu.isEndSide ? -1 : 1)) + 'px';\r\n    const contentOpen = new AnimationC()\r\n        .addElement(menu.contentEl)\r\n        .fromTo('translateX', '0px', openedX);\r\n    return baseAnimation(AnimationC).then(animation => {\r\n        return animation.add(contentOpen);\r\n    });\r\n};\n\nclass MenuController {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.menus = [];\n        this.menuAnimations = new Map();\n        this.registerAnimation('reveal', menuRevealAnimation);\n        this.registerAnimation('push', menuPushAnimation);\n        this.registerAnimation('overlay', menuOverlayAnimation);\n    }\n    /**\n     * Open the menu. If a menu is not provided then it will open the first\n     * menu found. If the specified menu is `start` or `end`, then it will open\n     * the enabled menu on that side. Otherwise, it will try to find the menu\n     * using the menu's `id` property. If a menu is not found then it will\n     * return `false`.\n     *\n     * @param menu The menuId or side of the menu to open.\n     */\n    async open(menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            return menuEl.open();\n        }\n        return false;\n    }\n    /**\n     * Close the menu. If a menu is specified, it will close that menu.\n     * If no menu is specified, then it will close any menu that is open.\n     * If it does not find any open menus, it will return `false`.\n     *\n     * @param menu The menuId or side of the menu to close.\n     */\n    async close(menu) {\n        const menuEl = await (menu !== undefined ? this.get(menu) : this.getOpen());\n        if (menuEl !== undefined) {\n            return menuEl.close();\n        }\n        return false;\n    }\n    /**\n     * Toggle the menu open or closed. If the menu is already open, it will try to\n     * close the menu, otherwise it will try to open it. Returns `false` if\n     * a menu is not found.\n     *\n     * @param menu The menuId or side of the menu to toggle.\n     */\n    async toggle(menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            return menuEl.toggle();\n        }\n        return false;\n    }\n    /**\n     * Enable or disable a menu. Disabling a menu will not allow gestures\n     * for that menu or any calls to open it. This is useful when there are\n     * multiple menus on the same side and only one of them should be allowed\n     * to open. Enabling a menu will automatically disable all other menus\n     * on that side.\n     *\n     * @param enable If `true`, the menu should be enabled.\n     * @param menu The menuId or side of the menu to enable or disable.\n     */\n    async enable(enable, menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            menuEl.disabled = !enable;\n        }\n        return menuEl;\n    }\n    /**\n     * Enable or disable the ability to swipe open the menu.\n     *\n     * @param enable If `true`, the menu swipe gesture should be enabled.\n     * @param menu The menuId or side of the menu to enable or disable the swipe gesture on.\n     */\n    async swipeGesture(enable, menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            menuEl.swipeGesture = enable;\n        }\n        return menuEl;\n    }\n    /**\n     * Get whether or not the menu is open. Returns `true` if the specified\n     * menu is open. If a menu is not specified, it will return `true` if\n     * any menu is currently open.\n     *\n     * @param menu The menuId or side of the menu that is being checked.\n     */\n    async isOpen(menu) {\n        if (menu != null) {\n            const menuEl = await this.get(menu);\n            return (menuEl !== undefined && menuEl.isOpen());\n        }\n        else {\n            const menuEl = await this.getOpen();\n            return menuEl !== undefined;\n        }\n    }\n    /**\n     * Get whether or not the menu is enabled. Returns `true` if the\n     * specified menu is enabled. Returns `false` if a menu is disabled\n     * or not found.\n     *\n     * @param menu The menuId or side of the menu that is being checked.\n     */\n    async isEnabled(menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            return !menuEl.disabled;\n        }\n        return false;\n    }\n    /**\n     * Get a menu instance. If a menu is not provided then it will return the first\n     * menu found. If the specified menu is `start` or `end`, then it will return the\n     * enabled menu on that side. Otherwise, it will try to find the menu using the menu's\n     * `id` property. If a menu is not found then it will return `null`.\n     *\n     * @param menu The menuId or side of the menu.\n     */\n    async get(menu) {\n        await this.waitUntilReady();\n        if (menu === 'start' || menu === 'end') {\n            // there could be more than one menu on the same side\n            // so first try to get the enabled one\n            const menuRef = this.find(m => m.side === menu && !m.disabled);\n            if (menuRef) {\n                return menuRef;\n            }\n            // didn't find a menu side that is enabled\n            // so try to get the first menu side found\n            return this.find(m => m.side === menu);\n        }\n        else if (menu != null) {\n            // the menuId was not left or right\n            // so try to get the menu by its \"id\"\n            return this.find(m => m.menuId === menu);\n        }\n        // return the first enabled menu\n        const menuEl = this.find(m => !m.disabled);\n        if (menuEl) {\n            return menuEl;\n        }\n        // get the first menu in the array, if one exists\n        return this.menus.length > 0 ? this.menus[0].el : undefined;\n    }\n    /**\n     * Get the instance of the opened menu. Returns `null` if a menu is not found.\n     */\n    async getOpen() {\n        await this.waitUntilReady();\n        return this.getOpenSync();\n    }\n    /**\n     * Get all menu instances.\n     */\n    async getMenus() {\n        await this.waitUntilReady();\n        return this.getMenusSync();\n    }\n    /**\n     * Get whether or not a menu is animating. Returns `true` if any\n     * menu is currently animating.\n     */\n    async isAnimating() {\n        await this.waitUntilReady();\n        return this.isAnimatingSync();\n    }\n    /**\n     * Registers a new animation that can be used with any `ion-menu` by\n     * passing the name of the animation in its `type` property.\n     *\n     * @param name The name of the animation to register.\n     * @param animation The animation function to register.\n     */\n    async registerAnimation(name, animation) {\n        this.menuAnimations.set(name, animation);\n    }\n    /**\n     * @internal\n     */\n    _getInstance() {\n        return Promise.resolve(this);\n    }\n    _register(menu) {\n        const menus = this.menus;\n        if (menus.indexOf(menu) < 0) {\n            if (!menu.disabled) {\n                this._setActiveMenu(menu);\n            }\n            menus.push(menu);\n        }\n    }\n    _unregister(menu) {\n        const index = this.menus.indexOf(menu);\n        if (index > -1) {\n            this.menus.splice(index, 1);\n        }\n    }\n    _setActiveMenu(menu) {\n        // if this menu should be enabled\n        // then find all the other menus on this same side\n        // and automatically disable other same side menus\n        const side = menu.side;\n        this.menus\n            .filter(m => m.side === side && m !== menu)\n            .forEach(m => m.disabled = true);\n    }\n    async _setOpen(menu, shouldOpen, animated) {\n        if (this.isAnimatingSync()) {\n            return false;\n        }\n        if (shouldOpen) {\n            const openedMenu = await this.getOpen();\n            if (openedMenu && menu.el !== openedMenu) {\n                await openedMenu.setOpen(false, false);\n            }\n        }\n        return menu._setOpen(shouldOpen, animated);\n    }\n    async _createAnimation(type, menuCmp) {\n        const animationBuilder = this.menuAnimations.get(type);\n        if (!animationBuilder) {\n            throw new Error('animation not registered');\n        }\n        const animation = await import('./index-d9adb105.js')\n            .then(mod => mod.create(animationBuilder, null, menuCmp));\n        if (!config.getBoolean('animated', true)) {\n            animation.duration(0);\n        }\n        return animation;\n    }\n    getOpenSync() {\n        return this.find(m => m._isOpen);\n    }\n    getMenusSync() {\n        return this.menus.map(menu => menu.el);\n    }\n    isAnimatingSync() {\n        return this.menus.some(menu => menu.isAnimating);\n    }\n    find(predicate) {\n        const instance = this.menus.find(predicate);\n        if (instance !== undefined) {\n            return instance.el;\n        }\n        return undefined;\n    }\n    waitUntilReady() {\n        return Promise.all(Array.from(document.querySelectorAll('ion-menu'))\n            .map(menu => menu.componentOnReady()));\n    }\n    static get style() { return \".menu-content{-webkit-transform:translateZ(0);transform:translateZ(0)}.menu-content-open{cursor:pointer;-ms-touch-action:manipulation;touch-action:manipulation;pointer-events:none}.ios .menu-content-reveal{-webkit-box-shadow:-8px 0 42px rgba(0,0,0,.08);box-shadow:-8px 0 42px rgba(0,0,0,.08)}[dir=rtl].ios .menu-content-reveal{-webkit-box-shadow:8px 0 42px rgba(0,0,0,.08);box-shadow:8px 0 42px rgba(0,0,0,.08)}.md .menu-content-push,.md .menu-content-reveal{-webkit-box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18);box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18)}\"; }\n}\n\nclass MenuToggle {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * Automatically hides the content when the corresponding menu is not active.\n         *\n         * By default, it's `true`. Change it to `false` in order to\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\n         */\n        this.autoHide = true;\n        this.setVisibility = async () => {\n            this.visible = await updateVisibility(this.menu);\n        };\n        this.onClick = async () => {\n            await toggleMenu(this.menu);\n        };\n    }\n    async componentDidLoad() {\n        await this.setVisibility();\n    }\n    async visibilityChanged() {\n        await this.setVisibility();\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", null)));\n    }\n    static get style() { return \":host(.menu-toggle-hidden){display:none}\"; }\n}\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuController as ion_menu_controller, MenuToggle as ion_menu_toggle };\n"],"sourceRoot":"webpack:///","file":"39-es5.js"}