{"version":3,"sources":["src/app/login/login.page.html","src/app/enums/AlertMessage.ts","src/app/login/login.module.ts","src/app/login/login.page.scss","src/app/login/login.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{'SIGN_IN' | translate}}</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"#\\\" (click)=\\\"PreviousPage()\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <!--   \\n  <ion-item>\\n    <ion-select [(ngModel)]=\\\"language\\\" (ionChange)=\\\"changeLanguage()\\\">\\n       <ion-select-option value=\\\"en\\\" selected=\\\"true\\\">English</ion-select-option>\\n       <ion-select-option value=\\\"fr\\\">French</ion-select-option>\\n       <ion-select-option value=\\\"ar\\\">Arabic</ion-select-option>\\n    </ion-select>\\n  </ion-item> -->\\n\\n  <div class=\\\"logo\\\">\\n    <img src=\\\"assets\\\\imgs\\\\logo.png\\\" alt=\\\"\\\">\\n  </div>\\n\\n  <!-- Segment with default selection -->\\n  <ion-segment value=\\\"SignIn\\\" [(ngModel)]=\\\"SignInForm\\\" mode=\\\"md\\\">\\n    <ion-grid fixed>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-segment-button mode=\\\"md\\\" value=\\\"SignIn\\\">\\n            <ion-label>{{'SIGN_IN' | translate}}</ion-label>\\n          </ion-segment-button>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-segment-button mode=\\\"md\\\" value=\\\"SignUP\\\">\\n            <ion-label>{{'SIGN_UP' | translate}}</ion-label>\\n          </ion-segment-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n\\n  </ion-segment>\\n\\n\\n  <div [ngSwitch]=\\\"SignInForm\\\">\\n\\n\\n    <ion-list *ngSwitchCase=\\\"'SignIn'\\\">\\n      <form [formGroup]=\\\"SignInF\\\">\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'ID' | translate}} <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"signIn_IdForm\\\" [(ngModel)]=\\\"id\\\" required>\\n            <i class=\\\"material-icons\\\">\\n              assignment_ind\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"SignInF.get('signIn_IdForm').hasError(validation.type) && (SignInF.get('signIn_IdForm').dirty || SignInF.get('signIn_IdForm').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'PHONE_NYMBER' | translate}} <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"signInPhone\\\" [(ngModel)]=\\\"loginPhone\\\" required>\\n            <i class=\\\"material-icons\\\">\\n              local_phone\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"SignInF.get('signInPhone').hasError(validation.type) && (SignInF.get('signInPhone').dirty || SignInF.get('signInPhone').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n        <br>\\n        <div class=\\\"Loginbutton\\\">\\n          <!-- [disabled]=\\\"PatientFoem.invalid\\\" -->\\n          <ion-button (click)=\\\"login()\\\" translate [disabled]=\\\"SignInF.invalid\\\">\\n            {{'SIGN_IN' | translate}}\\n          </ion-button>\\n        </div>\\n      </form>\\n    </ion-list>\\n\\n\\n\\n\\n\\n\\n    <ion-list *ngSwitchCase=\\\"'SignUP'\\\">\\n\\n      <form [formGroup]=\\\"PatientFoem\\\">\\n        <!-- \\n        <ion-slides pager=\\\"true\\\" #slides [options]=\\\"slideOpts\\\"> -->\\n        <!-- <ion-slide> -->\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'FRIST_NAME' | translate}}<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"FName\\\" [(ngModel)]=\\\"FName\\\" type=\\\"text\\\" required>\\n            <i class=\\\"material-icons\\\">\\n              person\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"PatientFoem.get('FName').hasError(validation.type) && (PatientFoem.get('FName').dirty || PatientFoem.get('FName').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'LAST_NAME' | translate}} <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"LName\\\" [(ngModel)]=\\\"LName\\\" type=\\\"text\\\" required>\\n            <i class=\\\"material-icons\\\">\\n              person\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"PatientFoem.get('LName').hasError(validation.type) && (PatientFoem.get('LName').dirty || PatientFoem.get('LName').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'ID' | translate}} <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"number\\\" formControlName=\\\"UserName\\\" [(ngModel)]=\\\"UserName\\\"  required>\\n            <i class=\\\"material-icons\\\">\\n              assignment_ind\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"PatientFoem.get('UserName').hasError(validation.type) && (PatientFoem.get('UserName').dirty || PatientFoem.get('UserName').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'EMAIL' | translate}} <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"Email\\\" [(ngModel)]=\\\"Email\\\" required>\\n            <i class=\\\"material-icons\\\">\\n              mail\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"PatientFoem.get('Email').hasError(validation.type) && (PatientFoem.get('Email').dirty || PatientFoem.get('Email').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'PHONE_NYMBER' | translate}} <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"number\\\" formControlName=\\\"Phone\\\" [(ngModel)]=\\\"R_Phone\\\" required>\\n            <i class=\\\"material-icons\\\">\\n              local_phone\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"PatientFoem.get('Phone').hasError(validation.type) && (PatientFoem.get('Phone').dirty || PatientFoem.get('Phone').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n\\n        <!-- </ion-slide> -->\\n\\n\\n        <!-- <ion-slide>\\n\\n            <ion-grid fixed>\\n\\n              <ion-row>\\n                <ion-col size=\\\"6\\\">\\n\\n                  <div class=\\\"name\\\">\\n                    <ion-label position=\\\"floating\\\">{{'COUNTRIES' | translate}} </ion-label>\\n                    <ion-select  [(ngModel)]=\\\"Country\\\" (ionChange)=\\\"loadRegions(Country)\\\"\\n                      [ngModelOptions]=\\\"{standalone: true}\\\">\\n                      <ion-select-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country\\\">{{country.name}}\\n                      </ion-select-option>\\n                    </ion-select>\\n                  </div>\\n\\n                </ion-col>\\n\\n                <ion-col size=\\\"6\\\">\\n\\n                  <div class=\\\"name\\\">\\n                    <ion-label position=\\\"floating\\\">{{'REGION' | translate}} </ion-label>\\n                    <ion-select [(ngModel)]=\\\"Region\\\" (ionChange)=\\\"loadCities(Region)\\\"\\n                      [ngModelOptions]=\\\"{standalone: true}\\\">\\n                      <ion-select-option *ngFor=\\\"let region of regions\\\" [value]=\\\"region\\\">{{region.name}}\\n                      </ion-select-option>\\n                    </ion-select>\\n                  </div>\\n\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n\\n            <div class=\\\"name\\\">\\n              <ion-label position=\\\"floating\\\">{{'CITY' | translate}} </ion-label>\\n              <ion-select   [(ngModel)]=\\\"City\\\" (ionChange)=\\\"loadDistricts(City)\\\"\\n              [ngModelOptions]=\\\"{standalone: true}\\\">\\n              <ion-select-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city\\\">{{city.name}}\\n                </ion-select-option>\\n              </ion-select>\\n            </div>\\n\\n\\n            <div class=\\\"name\\\">\\n                <ion-label position=\\\"floating\\\">{{'DISTRICT' | translate}} </ion-label>\\n              <ion-select [(ngModel)]=\\\"District\\\" (ionChange)=\\\"districtsSelected(District)\\\"\\n              [ngModelOptions]=\\\"{standalone: true}\\\">\\n              <ion-select-option *ngFor=\\\"let district of districts\\\" [value]=\\\"district\\\">{{district.name}}\\n                </ion-select-option>\\n              </ion-select>\\n            </div>\\n\\n\\n            <div class=\\\"name\\\">\\n              <ion-label position=\\\"stacked\\\">{{'ADDRESS' | translate}}</ion-label>\\n              <ion-textarea [(ngModel)]=\\\"addressDetails\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></ion-textarea>\\n            </div>\\n\\n          </ion-slide>\\n\\n          <ion-slide>\\n            <h1>Slide 3</h1>\\n          </ion-slide>\\n\\n        </ion-slides> -->\\n        <div class=\\\"divBT\\\">\\n          <ion-button color=\\\"danger\\\" [disabled]=\\\"PatientFoem.invalid\\\" (click)=\\\"registerMobileUser()\\\">\\n            <!-- <ion-icon name=\\\"arrow-round-forward\\\" slot=\\\"end\\\"></ion-icon> -->\\n            {{'NEXT' | translate}}\\n          </ion-button>\\n        </div>\\n\\n      </form>\\n\\n\\n      <!-- <div class=\\\"divBT\\\">\\n         <ion-button style=\\\"margin-right: 50px;\\\" color=\\\"danger\\\" (click)=\\\"slidPrev()\\\" *ngIf=\\\"slideIndexNumber > 0\\\">\\n          {{'PREVIOUS' | translate}}\\n        </ion-button> \\n         <ion-button color=\\\"danger\\\" [disabled]=\\\"PatientFoem.invalid\\\" (click)=\\\"registerMobileUser()\\\" style=\\\"margin-top: 5px;\\\">\\n          <ion-icon name=\\\"arrow-round-forward\\\" slot=\\\"end\\\"></ion-icon>\\n          {{'NEXT' | translate}}\\n        </ion-button> \\n         <ion-button [disabled]=\\\"PatientFoem.invalid\\\" color=\\\"danger\\\" (click)=\\\"createPatient()\\\" *ngIf=\\\"lastSlide\\\">\\n          {{'FINISH' | translate}}\\n        </ion-button> \\n      </div> -->\\n\\n    </ion-list>\\n\\n  </div>\\n\\n</ion-content>\"","export enum LoginAlertMessage{\r\n    title_ar = 'خطأ في عملية الدخول',\r\n    title_en = 'Login Failed',\r\n\r\n    messageLoginFaild_ar = 'اسم المستخدم أو رقم الهاتف ليس متطابق',\r\n    messageLoginFaild_en = 'Your ID or Phone number do not match.',\r\n\r\n }\r\n\r\n export enum RegisterAlertMessage{\r\n\r\n    title_ar = 'خطأ في عملية التسجيل',\r\n    title_en = 'Register Failed',\r\n\r\n    messageRegisterUserNameInvalid_ar = 'اسم المستخدم/رقم الهوية الذي ادخلته موجود مسبقا',\r\n    messageRegisterUserNameInvalid_en = 'The username/ID you entered already exists.',\r\n\r\n    messageRegisterEmailInvalid_ar = 'تاكد من ادخال البريد الالكتروني بشكل صحيح',\r\n    messageRegisterEmailInvalid_en = 'The EmailAddress field is not a valid e-mail address.',\r\n\r\n\r\n }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule ,ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    TranslateModule.forChild(),\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".logo {\\n  width: 130px;\\n  height: 145px;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\nion-slides {\\n  background: var(--content-color);\\n  height: 100%; }\\n\\nion-list {\\n  background: var(--content-color); }\\n\\n.name {\\n  text-align: justify;\\n  padding-top: 10px; }\\n\\nion-input {\\n  --background:white;\\n  position: relative;\\n  border-radius: 5px;\\n  --padding-start:10px;\\n  font-size: 12px;\\n  width: 90%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  padding-left: 5px;\\n  padding-right: 5px; }\\n\\nion-slide {\\n  display: block; }\\n\\n.label-floating.sc-ion-label-md-h, .label-stacked.sc-ion-label-md-h {\\n  font-size: 13px;\\n  color: dimgrey;\\n  margin-left: 23px; }\\n\\n.label-floating.sc-ion-label-ios-h, .label-stacked.sc-ion-label-ios-h {\\n  font-size: 13px;\\n  color: dimgrey;\\n  margin-left: 23px; }\\n\\nion-select {\\n  background: white;\\n  border-radius: 5px;\\n  color: red;\\n  font-size: 15px;\\n  width: 90%;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\nion-textarea {\\n  background: white;\\n  height: 50px;\\n  border-radius: 8px;\\n  font-size: 14px;\\n  width: 90%;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\n.divBT {\\n  text-align: center;\\n  margin-bottom: 10px;\\n  margin-top: 10px; }\\n\\n.divBT ion-button {\\n    width: 90%; }\\n\\n.Loginbutton {\\n  text-align: center; }\\n\\n.Loginbutton ion-button {\\n    width: 90%; }\\n\\nion-label {\\n  padding-right: 20px; }\\n\\n.error-message {\\n  color: #f04141;\\n  padding-left: 20px;\\n  padding-right: 20px; }\\n\\nion-segment-button {\\n  width: 90%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vRDpcXHdvcmtcXHByb2plY3RcXFNIQ1Qvc3JjXFxhcHBcXGxvZ2luXFxsb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFZO0VBQ1osYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxnQ0FBZ0M7RUFDaEMsWUFBWSxFQUFBOztBQUdoQjtFQUNJLGdDQUFnQyxFQUFBOztBQUdwQztFQUNHLG1CQUFtQjtFQUNsQixpQkFBaUIsRUFBQTs7QUFJbkI7RUFDRSxrQkFBYTtFQUNiLGtCQUFrQjtFQUNsQixrQkFBaUI7RUFDakIsb0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixVQUFVO0VBQ1YsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0ksY0FBYyxFQUFBOztBQUdsQjtFQUNFLGVBQWU7RUFDZixjQUFjO0VBQ2QsaUJBQWlCLEVBQUE7O0FBRXJCO0VBQ0UsZUFBZTtFQUNmLGNBQWM7RUFDZCxpQkFBaUIsRUFBQTs7QUFHbkI7RUFDSSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixlQUFlO0VBQ2YsVUFBVTtFQUNWLGlCQUFpQjtFQUNqQixrQkFBa0IsRUFBQTs7QUFHbEI7RUFFSSxpQkFBaUI7RUFDakIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsVUFBVTtFQUNWLGlCQUFpQjtFQUNqQixrQkFBa0IsRUFBQTs7QUFFcEI7RUFDRSxrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLGdCQUFnQixFQUFBOztBQUhsQjtJQUtJLFVBQVUsRUFBQTs7QUFJZDtFQUNJLGtCQUFrQixFQUFBOztBQUR0QjtJQUdLLFVBQVUsRUFBQTs7QUFHZjtFQUVGLG1CQUFtQixFQUFBOztBQUdqQjtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsbUJBQW1CLEVBQUE7O0FBRXJCO0VBQ0UsVUFBVSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ297XHJcbiAgICB3aWR0aDogMTMwcHg7XHJcbiAgICBoZWlnaHQ6IDE0NXB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbmlvbi1zbGlkZXMge1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0tY29udGVudC1jb2xvcik7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcblxyXG5pb24tbGlzdHtcclxuICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbnRlbnQtY29sb3IpO1xyXG59XHJcblxyXG4ubmFtZXtcclxuICAgdGV4dC1hbGlnbjoganVzdGlmeTtcclxuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xyXG4gICBcclxuICB9XHJcblxyXG4gIGlvbi1pbnB1dHtcclxuICAgIC0tYmFja2dyb3VuZDp3aGl0ZTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6NXB4O1xyXG4gICAgLS1wYWRkaW5nLXN0YXJ0OjEwcHg7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICB3aWR0aDogOTAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDVweDtcclxuICB9XHJcblxyXG4gIGlvbi1zbGlkZXtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG5cclxuICAubGFiZWwtZmxvYXRpbmcuc2MtaW9uLWxhYmVsLW1kLWgsIC5sYWJlbC1zdGFja2VkLnNjLWlvbi1sYWJlbC1tZC1oIHtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGNvbG9yOiBkaW1ncmV5O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDIzcHg7XHJcbn1cclxuLmxhYmVsLWZsb2F0aW5nLnNjLWlvbi1sYWJlbC1pb3MtaCwgLmxhYmVsLXN0YWNrZWQuc2MtaW9uLWxhYmVsLWlvcy1oIHtcclxuICBmb250LXNpemU6IDEzcHg7XHJcbiAgY29sb3I6IGRpbWdyZXk7XHJcbiAgbWFyZ2luLWxlZnQ6IDIzcHg7XHJcbn1cclxuXHJcbmlvbi1zZWxlY3Qge1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgd2lkdGg6IDkwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgfVxyXG5cclxuICAgIGlvbi10ZXh0YXJlYSB7XHJcblxyXG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgICB9XHJcbiAgICAgIC5kaXZCVHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgICAgIGlvbi1idXR0b24ge1xyXG4gICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5Mb2dpbmJ1dHRvbiB7XHJcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICBpb24tYnV0dG9uIHtcclxuICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGlvbi1sYWJlbHtcclxuICAgICAgLy8gIHBhZGRpbmctbGVmdDogMjBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5lcnJvci1tZXNzYWdle1xyXG4gICAgICAgIGNvbG9yOiAjZjA0MTQxO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMjBweDtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xyXG4gICAgICB9XHJcbiAgICAgIGlvbi1zZWdtZW50LWJ1dHRvbiB7XHJcbiAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgfVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonSlides, AlertController, NavController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LookUpDto } from '../models/LookUps/LookUp';\nimport { LookUps } from '../services/Lookup/LookUps';\nimport { LoginService, MobileLoginInput ,IMobileRegisterInput,MobileRegisterInput,IMobileLoginOrRegisterOutput,MobileLoginOrRegisterOutput  } from '../services/login/login';\nimport { Router } from '@angular/router';\nimport { DataShareService } from '../services/DataShare/data-share.service';\nimport { LoadingService } from '../services/loading/loading.service';\nimport { RegisterAlertMessage, LoginAlertMessage } from '../enums/AlertMessage';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  @ViewChild('slides', { static: false }) slides: IonSlides;\n  //isEditable      : boolean = false;\n  lastSlide: boolean = false;\n  slideIndexNumber: number;\n\n  public title: string;\n  public description: string;\n  public language;\n\n  SignInForm: string = 'SignIn';\n\n  PatientFoem: FormGroup;\n  SignInF : FormGroup;\n\n  validation_messages =\n    {\n      'Required_message': [{ type: 'required', message: 'required.' }],\n    };\n\n  country_Id    : number;\n  region_Id     : number;\n  city_Id       : number;\n  district_Id   : number;\n  ngNationality : string;\n\n  nationalities: LookUpDto[];\n  countries    : LookUpDto[];\n  regions      : LookUpDto[];\n  cities       : LookUpDto[];\n  districts    : LookUpDto[];\n\n  id; loginPhone ;\n\n  newUser : IMobileRegisterInput;\n  FName   : string ;\n  LName   : string ;\n  UserName: string ;\n  R_Phone : string ;\n  Email   : string ;\n\n  mobileRegisterOutput : IMobileLoginOrRegisterOutput;\n\n  messageLoginFaild              : string ;\n  titleLoginMessage              : string ;\n  titleRegisterMessage           : string ;\n  messageRegisterEmailInvalid    : string ;\n  messageRegisterUserNameInvalid : string ;\n\n\n\n  constructor\n    (\n      private _translate : TranslateService,\n      private _lookUp    : LookUps,\n      private _login     : LoginService,\n      private router     : Router,\n      private _dataShare : DataShareService,\n      private _loading   : LoadingService,\n      private alertController: AlertController,\n      private navctrl : NavController ,\n      \n    ) { }\n\n\n  public changeLanguage(): void {\n    console.log(this.language)\n    this._translate.use(this.language);\n  }\n\n\n  ngOnInit() {\n    if(window.localStorage.getItem('lang') === 'ar'){\n     this.validation_messages.Required_message[0].message=\"لا تترك هذا الحقل فارغا\"\n    }\n    this.setupForm();\n    // this.loadNationalities();\n    //this.loadCountries();\n  }\n\n\n  //#region  Validation\n  setupForm() {\n\n    this.SignInF = new FormGroup ({\n      signIn_IdForm : new FormControl('', Validators.compose([Validators.required,])),\n      signInPhone   : new FormControl('', Validators.compose([Validators.required,])),\n    })\n\n    this.PatientFoem = new FormGroup\n      ({\n        FName: new FormControl('', Validators.compose([Validators.required,])),\n        LName: new FormControl('', Validators.compose([Validators.required,])),\n        UserName: new FormControl('', Validators.compose([Validators.required,])),\n        Phone: new FormControl('', Validators.compose([Validators.required,])),\n        Email: new FormControl('', Validators.compose([Validators.required,])),\n      })\n  }\n  //#endregion\n\n\n  login() {\n\n    this._loading.present();\n\n\n    let loginInput: MobileLoginInput = {\n      UserName: this.id,\n      PhoneNumber: this.loginPhone.toString()\n    }\n\n    console.log(loginInput);\n\n    this._login.loginWithNationalIdAndMobile(loginInput).subscribe(data => {\n      this._loading.dismiss();\n\n      this.titleLoginMessage = (this._translate.currentLang == 'ar')  ?  LoginAlertMessage.title_ar :  LoginAlertMessage.title_en;\n      this.messageLoginFaild = (this._translate.currentLang == 'ar')  ?  LoginAlertMessage.messageLoginFaild_ar :  LoginAlertMessage.messageLoginFaild_en;\n\n      console.log(data);\n      if (data.result.status == 1) {\n        this._dataShare.setData(\"loginInfo\",this.id);\n        this.router.navigateByUrl('/login-verification-code/loginInfo');\n      }else\n      this.presentAlert(this.titleLoginMessage ,this.messageLoginFaild );\n     \n    }, error => { \n      this._loading.dismiss();\n      this.presentAlert(this.titleLoginMessage ,this.messageLoginFaild );\n      console.log(error) \n    }\n\n    )\n  }\n\n  slidNext() {\n    this.slides.slideNext();\n    this.slides.isEnd().then(isEnd => {\n      console.log(isEnd)\n    })\n    this.slides.getActiveIndex().then(Index => {\n      console.log(Index)\n      this.slideIndexNumber = Index;\n      this.lastSlide = (Index === 2) ? true : false;\n    })\n\n  }\n\n  slidPrev() {\n    this.slides.slidePrev();\n    this.slides.getActiveIndex().then(Index => {\n      console.log(Index)\n      this.slideIndexNumber = Index;\n      this.lastSlide = (Index === 2) ? true : false;\n    })\n  }\n\n\n  //#region LookUps\n  // loadNationalities() {\n  //   this._lookUp.getAllNationalities(this.to).subscribe(nationalities => {\n  //     this.nationalities = nationalities.result;\n  //     console.log(this.nationalities);\n  //   })\n  // }\n\n  // loadCountries() {\n  //   this._lookUp.getAllCountries().subscribe(\n  //     countries => {\n  //       this.countries = countries.result;\n  //     }\n  //   );\n  //   console.log(this.countries);\n  // }\n\n  // loadRegions(country: LookUpDto) {\n\n  //   this.country_Id = country.value;\n  //   console.log(this.country_Id);\n  //   console.log(country)\n\n  //   this._lookUp.getAllRegions(undefined, country.value).subscribe(\n  //     regions => {\n  //       this.regions = regions.result;\n  //     }\n  //   )\n  //   console.log(this.regions)\n  // }\n\n  // loadCities(region: LookUpDto) {\n\n  //   this.region_Id = region.value;\n  //   console.log(this.region_Id);\n  //   console.log(region)\n\n  //   this._lookUp.getAllCities(undefined, region.value).subscribe(\n  //     cities => {\n  //       this.cities = cities.result;\n  //     }\n  //   )\n  //   console.log(this.cities)\n  // }\n\n  // loadDistricts(city: LookUpDto) {\n\n  //   this.city_Id = city.value;\n  //   console.log(this.city_Id);\n  //   console.log(city)\n\n  //   this._lookUp.getAllDistricts(undefined, city.value).subscribe(\n  //     districts => {\n  //       this.districts = districts.result;\n  //     }\n  //   )\n  //   console.log(this.districts)\n\n  // }\n\n  districtsSelected(district: LookUpDto) {\n    this.district_Id = district.value;\n    console.log(this.district_Id)\n\n  }\n  //#endregion\n\n  registerMobileUser(){\n\n    this._loading.present();\n\n    this.newUser ={\n      name         : this.FName,\n      surname      : this.LName,\n      userName     : this.UserName,\n      emailAddress : this.Email,\n      phoneNumber  : this.R_Phone\n    }\n \n    let user = new MobileRegisterInput(this.newUser);\n\n    console.log(this.newUser)\n\n    this._login.registerMobileUser(user).subscribe((data:any) => {\n      this._loading.dismiss();\n      console.log(data);\n\n      if (data.result.status == 1) {\n        this._dataShare.setData(\"loginInfo\",this.UserName);\n        this.router.navigateByUrl('/login-verification-code/loginInfo');\n        this.mobileRegisterOutput = data.result;\n        console.log(this.mobileRegisterOutput);\n      }\n      else\n      this.presentAlert(\"\",data.result.message);\n    },error => {\n\n      this._loading.dismiss();\n\n      console.log(error)\n      this.titleRegisterMessage           = (this._translate.currentLang == 'ar')  ?  RegisterAlertMessage.title_ar :  RegisterAlertMessage.title_en;\n      this.messageRegisterEmailInvalid    = (this._translate.currentLang == 'ar')  ?  RegisterAlertMessage.messageRegisterEmailInvalid_ar :  RegisterAlertMessage.messageRegisterEmailInvalid_en;\n      this.messageRegisterUserNameInvalid = (this._translate.currentLang == 'ar')  ?  RegisterAlertMessage.messageRegisterUserNameInvalid_ar :  RegisterAlertMessage.messageRegisterUserNameInvalid_en;\n     \n      if(error.error.error.validationErrors)\n        this.presentAlert(this.titleRegisterMessage, this.messageRegisterEmailInvalid)\n      else\n      this.presentAlert(this.titleRegisterMessage, this.messageRegisterUserNameInvalid)\n      \n    })\n  }\n\n  async presentAlert(title:string , message : string ) {\n    const alert = await this.alertController.create({\n      header: title,\n      message: message,\n      buttons: ['OK']\n    });\n  \n    await alert.present();\n  }\n\n  PreviousPage(){\n    this.navctrl.back();\n   // console.log(this.location.path());\n  }\n\n\n}\n"],"sourceRoot":"webpack:///","file":"login-login-module-es5.js"}