{"version":3,"sources":["./src/app/login/login.page.html","./src/app/enums/AlertMessage.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{'SIGN_IN' | translate}}</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"#\\\" (click)=\\\"PreviousPage()\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <!--   \\n  <ion-item>\\n    <ion-select [(ngModel)]=\\\"language\\\" (ionChange)=\\\"changeLanguage()\\\">\\n       <ion-select-option value=\\\"en\\\" selected=\\\"true\\\">English</ion-select-option>\\n       <ion-select-option value=\\\"fr\\\">French</ion-select-option>\\n       <ion-select-option value=\\\"ar\\\">Arabic</ion-select-option>\\n    </ion-select>\\n  </ion-item> -->\\n\\n  <div class=\\\"logo\\\">\\n    <img src=\\\"assets\\\\imgs\\\\logo.png\\\" alt=\\\"\\\">\\n  </div>\\n\\n  <!-- Segment with default selection -->\\n  <ion-segment value=\\\"SignIn\\\" [(ngModel)]=\\\"SignInForm\\\" mode=\\\"md\\\">\\n    <ion-grid fixed>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-segment-button mode=\\\"md\\\" value=\\\"SignIn\\\">\\n            <ion-label>{{'SIGN_IN' | translate}}</ion-label>\\n          </ion-segment-button>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-segment-button mode=\\\"md\\\" value=\\\"SignUP\\\">\\n            <ion-label>{{'SIGN_UP' | translate}}</ion-label>\\n          </ion-segment-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n\\n  </ion-segment>\\n\\n\\n  <div [ngSwitch]=\\\"SignInForm\\\">\\n\\n\\n    <ion-list *ngSwitchCase=\\\"'SignIn'\\\">\\n      <form [formGroup]=\\\"SignInF\\\">\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'ID' | translate}} <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"signIn_IdForm\\\" [(ngModel)]=\\\"id\\\" required>\\n            <i class=\\\"material-icons\\\">\\n              assignment_ind\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"SignInF.get('signIn_IdForm').hasError(validation.type) && (SignInF.get('signIn_IdForm').dirty || SignInF.get('signIn_IdForm').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'PHONE_NYMBER' | translate}} <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"signInPhone\\\" [(ngModel)]=\\\"loginPhone\\\" required>\\n            <i class=\\\"material-icons\\\">\\n              local_phone\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"SignInF.get('signInPhone').hasError(validation.type) && (SignInF.get('signInPhone').dirty || SignInF.get('signInPhone').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n        <br>\\n        <div class=\\\"Loginbutton\\\">\\n          <!-- [disabled]=\\\"PatientFoem.invalid\\\" -->\\n          <ion-button (click)=\\\"login()\\\" translate [disabled]=\\\"SignInF.invalid\\\">\\n            {{'SIGN_IN' | translate}}\\n          </ion-button>\\n        </div>\\n      </form>\\n    </ion-list>\\n\\n\\n\\n\\n\\n\\n    <ion-list *ngSwitchCase=\\\"'SignUP'\\\">\\n\\n      <form [formGroup]=\\\"PatientFoem\\\">\\n        <!-- \\n        <ion-slides pager=\\\"true\\\" #slides [options]=\\\"slideOpts\\\"> -->\\n        <!-- <ion-slide> -->\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'FRIST_NAME' | translate}}<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"FName\\\" [(ngModel)]=\\\"FName\\\" type=\\\"text\\\" required>\\n            <i class=\\\"material-icons\\\">\\n              person\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"PatientFoem.get('FName').hasError(validation.type) && (PatientFoem.get('FName').dirty || PatientFoem.get('FName').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'LAST_NAME' | translate}} <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"LName\\\" [(ngModel)]=\\\"LName\\\" type=\\\"text\\\" required>\\n            <i class=\\\"material-icons\\\">\\n              person\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"PatientFoem.get('LName').hasError(validation.type) && (PatientFoem.get('LName').dirty || PatientFoem.get('LName').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'ID' | translate}} <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"number\\\" formControlName=\\\"UserName\\\" [(ngModel)]=\\\"UserName\\\"  required>\\n            <i class=\\\"material-icons\\\">\\n              assignment_ind\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"PatientFoem.get('UserName').hasError(validation.type) && (PatientFoem.get('UserName').dirty || PatientFoem.get('UserName').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'EMAIL' | translate}} <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"Email\\\" [(ngModel)]=\\\"Email\\\" required>\\n            <i class=\\\"material-icons\\\">\\n              mail\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"PatientFoem.get('Email').hasError(validation.type) && (PatientFoem.get('Email').dirty || PatientFoem.get('Email').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n\\n        <div class=\\\"name\\\">\\n          <ion-label position=\\\"floating\\\">{{'PHONE_NYMBER' | translate}} <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <ion-input type=\\\"number\\\" formControlName=\\\"Phone\\\" [(ngModel)]=\\\"R_Phone\\\" required>\\n            <i class=\\\"material-icons\\\">\\n              local_phone\\n            </i>\\n          </ion-input>\\n\\n          <!-- validation message -->\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Required_message\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"PatientFoem.get('Phone').hasError(validation.type) && (PatientFoem.get('Phone').dirty || PatientFoem.get('Phone').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <!-- end validation message -->\\n\\n        </div>\\n\\n        <!-- </ion-slide> -->\\n\\n\\n        <!-- <ion-slide>\\n\\n            <ion-grid fixed>\\n\\n              <ion-row>\\n                <ion-col size=\\\"6\\\">\\n\\n                  <div class=\\\"name\\\">\\n                    <ion-label position=\\\"floating\\\">{{'COUNTRIES' | translate}} </ion-label>\\n                    <ion-select  [(ngModel)]=\\\"Country\\\" (ionChange)=\\\"loadRegions(Country)\\\"\\n                      [ngModelOptions]=\\\"{standalone: true}\\\">\\n                      <ion-select-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country\\\">{{country.name}}\\n                      </ion-select-option>\\n                    </ion-select>\\n                  </div>\\n\\n                </ion-col>\\n\\n                <ion-col size=\\\"6\\\">\\n\\n                  <div class=\\\"name\\\">\\n                    <ion-label position=\\\"floating\\\">{{'REGION' | translate}} </ion-label>\\n                    <ion-select [(ngModel)]=\\\"Region\\\" (ionChange)=\\\"loadCities(Region)\\\"\\n                      [ngModelOptions]=\\\"{standalone: true}\\\">\\n                      <ion-select-option *ngFor=\\\"let region of regions\\\" [value]=\\\"region\\\">{{region.name}}\\n                      </ion-select-option>\\n                    </ion-select>\\n                  </div>\\n\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n\\n            <div class=\\\"name\\\">\\n              <ion-label position=\\\"floating\\\">{{'CITY' | translate}} </ion-label>\\n              <ion-select   [(ngModel)]=\\\"City\\\" (ionChange)=\\\"loadDistricts(City)\\\"\\n              [ngModelOptions]=\\\"{standalone: true}\\\">\\n              <ion-select-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city\\\">{{city.name}}\\n                </ion-select-option>\\n              </ion-select>\\n            </div>\\n\\n\\n            <div class=\\\"name\\\">\\n                <ion-label position=\\\"floating\\\">{{'DISTRICT' | translate}} </ion-label>\\n              <ion-select [(ngModel)]=\\\"District\\\" (ionChange)=\\\"districtsSelected(District)\\\"\\n              [ngModelOptions]=\\\"{standalone: true}\\\">\\n              <ion-select-option *ngFor=\\\"let district of districts\\\" [value]=\\\"district\\\">{{district.name}}\\n                </ion-select-option>\\n              </ion-select>\\n            </div>\\n\\n\\n            <div class=\\\"name\\\">\\n              <ion-label position=\\\"stacked\\\">{{'ADDRESS' | translate}}</ion-label>\\n              <ion-textarea [(ngModel)]=\\\"addressDetails\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></ion-textarea>\\n            </div>\\n\\n          </ion-slide>\\n\\n          <ion-slide>\\n            <h1>Slide 3</h1>\\n          </ion-slide>\\n\\n        </ion-slides> -->\\n        <div class=\\\"divBT\\\">\\n          <ion-button color=\\\"danger\\\" [disabled]=\\\"PatientFoem.invalid\\\" (click)=\\\"registerMobileUser()\\\">\\n            <!-- <ion-icon name=\\\"arrow-round-forward\\\" slot=\\\"end\\\"></ion-icon> -->\\n            {{'NEXT' | translate}}\\n          </ion-button>\\n        </div>\\n\\n      </form>\\n\\n\\n      <!-- <div class=\\\"divBT\\\">\\n         <ion-button style=\\\"margin-right: 50px;\\\" color=\\\"danger\\\" (click)=\\\"slidPrev()\\\" *ngIf=\\\"slideIndexNumber > 0\\\">\\n          {{'PREVIOUS' | translate}}\\n        </ion-button> \\n         <ion-button color=\\\"danger\\\" [disabled]=\\\"PatientFoem.invalid\\\" (click)=\\\"registerMobileUser()\\\" style=\\\"margin-top: 5px;\\\">\\n          <ion-icon name=\\\"arrow-round-forward\\\" slot=\\\"end\\\"></ion-icon>\\n          {{'NEXT' | translate}}\\n        </ion-button> \\n         <ion-button [disabled]=\\\"PatientFoem.invalid\\\" color=\\\"danger\\\" (click)=\\\"createPatient()\\\" *ngIf=\\\"lastSlide\\\">\\n          {{'FINISH' | translate}}\\n        </ion-button> \\n      </div> -->\\n\\n    </ion-list>\\n\\n  </div>\\n\\n</ion-content>\"","export enum LoginAlertMessage{\r\n    title_ar = 'خطأ في عملية الدخول',\r\n    title_en = 'Login Failed',\r\n\r\n    messageLoginFaild_ar = 'اسم المستخدم أو رقم الهاتف ليس متطابق',\r\n    messageLoginFaild_en = 'Your ID or Phone number do not match.',\r\n\r\n }\r\n\r\n export enum RegisterAlertMessage{\r\n\r\n    title_ar = 'خطأ في عملية التسجيل',\r\n    title_en = 'Register Failed',\r\n\r\n    messageRegisterUserNameInvalid_ar = 'اسم المستخدم/رقم الهوية الذي ادخلته موجود مسبقا',\r\n    messageRegisterUserNameInvalid_en = 'The username/ID you entered already exists.',\r\n\r\n    messageRegisterEmailInvalid_ar = 'تاكد من ادخال البريد الالكتروني بشكل صحيح',\r\n    messageRegisterEmailInvalid_en = 'The EmailAddress field is not a valid e-mail address.',\r\n\r\n\r\n }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule ,ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    TranslateModule.forChild(),\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".logo {\\n  width: 130px;\\n  height: 145px;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\nion-slides {\\n  background: var(--content-color);\\n  height: 100%; }\\n\\nion-list {\\n  background: var(--content-color); }\\n\\n.name {\\n  text-align: justify;\\n  padding-top: 10px; }\\n\\nion-input {\\n  --background:white;\\n  position: relative;\\n  border-radius: 5px;\\n  --padding-start:10px;\\n  font-size: 12px;\\n  width: 90%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  padding-left: 5px;\\n  padding-right: 5px; }\\n\\nion-slide {\\n  display: block; }\\n\\n.label-floating.sc-ion-label-md-h, .label-stacked.sc-ion-label-md-h {\\n  font-size: 13px;\\n  color: dimgrey;\\n  margin-left: 23px; }\\n\\n.label-floating.sc-ion-label-ios-h, .label-stacked.sc-ion-label-ios-h {\\n  font-size: 13px;\\n  color: dimgrey;\\n  margin-left: 23px; }\\n\\nion-select {\\n  background: white;\\n  border-radius: 5px;\\n  color: red;\\n  font-size: 15px;\\n  width: 90%;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\nion-textarea {\\n  background: white;\\n  height: 50px;\\n  border-radius: 8px;\\n  font-size: 14px;\\n  width: 90%;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\n.divBT {\\n  text-align: center;\\n  margin-bottom: 10px;\\n  margin-top: 10px; }\\n\\n.divBT ion-button {\\n    width: 90%; }\\n\\n.Loginbutton {\\n  text-align: center; }\\n\\n.Loginbutton ion-button {\\n    width: 90%; }\\n\\nion-label {\\n  padding-right: 20px; }\\n\\n.error-message {\\n  color: #f04141;\\n  padding-left: 20px;\\n  padding-right: 20px; }\\n\\nion-segment-button {\\n  width: 90%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vRDpcXHdvcmtcXHByb2plY3RcXFNIQ1Qvc3JjXFxhcHBcXGxvZ2luXFxsb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFZO0VBQ1osYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxnQ0FBZ0M7RUFDaEMsWUFBWSxFQUFBOztBQUdoQjtFQUNJLGdDQUFnQyxFQUFBOztBQUdwQztFQUNHLG1CQUFtQjtFQUNsQixpQkFBaUIsRUFBQTs7QUFJbkI7RUFDRSxrQkFBYTtFQUNiLGtCQUFrQjtFQUNsQixrQkFBaUI7RUFDakIsb0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixVQUFVO0VBQ1YsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0ksY0FBYyxFQUFBOztBQUdsQjtFQUNFLGVBQWU7RUFDZixjQUFjO0VBQ2QsaUJBQWlCLEVBQUE7O0FBRXJCO0VBQ0UsZUFBZTtFQUNmLGNBQWM7RUFDZCxpQkFBaUIsRUFBQTs7QUFHbkI7RUFDSSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixlQUFlO0VBQ2YsVUFBVTtFQUNWLGlCQUFpQjtFQUNqQixrQkFBa0IsRUFBQTs7QUFHbEI7RUFFSSxpQkFBaUI7RUFDakIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsVUFBVTtFQUNWLGlCQUFpQjtFQUNqQixrQkFBa0IsRUFBQTs7QUFFcEI7RUFDRSxrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLGdCQUFnQixFQUFBOztBQUhsQjtJQUtJLFVBQVUsRUFBQTs7QUFJZDtFQUNJLGtCQUFrQixFQUFBOztBQUR0QjtJQUdLLFVBQVUsRUFBQTs7QUFHZjtFQUVGLG1CQUFtQixFQUFBOztBQUdqQjtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsbUJBQW1CLEVBQUE7O0FBRXJCO0VBQ0UsVUFBVSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ297XHJcbiAgICB3aWR0aDogMTMwcHg7XHJcbiAgICBoZWlnaHQ6IDE0NXB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbmlvbi1zbGlkZXMge1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0tY29udGVudC1jb2xvcik7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcblxyXG5pb24tbGlzdHtcclxuICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbnRlbnQtY29sb3IpO1xyXG59XHJcblxyXG4ubmFtZXtcclxuICAgdGV4dC1hbGlnbjoganVzdGlmeTtcclxuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xyXG4gICBcclxuICB9XHJcblxyXG4gIGlvbi1pbnB1dHtcclxuICAgIC0tYmFja2dyb3VuZDp3aGl0ZTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6NXB4O1xyXG4gICAgLS1wYWRkaW5nLXN0YXJ0OjEwcHg7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICB3aWR0aDogOTAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDVweDtcclxuICB9XHJcblxyXG4gIGlvbi1zbGlkZXtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG5cclxuICAubGFiZWwtZmxvYXRpbmcuc2MtaW9uLWxhYmVsLW1kLWgsIC5sYWJlbC1zdGFja2VkLnNjLWlvbi1sYWJlbC1tZC1oIHtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGNvbG9yOiBkaW1ncmV5O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDIzcHg7XHJcbn1cclxuLmxhYmVsLWZsb2F0aW5nLnNjLWlvbi1sYWJlbC1pb3MtaCwgLmxhYmVsLXN0YWNrZWQuc2MtaW9uLWxhYmVsLWlvcy1oIHtcclxuICBmb250LXNpemU6IDEzcHg7XHJcbiAgY29sb3I6IGRpbWdyZXk7XHJcbiAgbWFyZ2luLWxlZnQ6IDIzcHg7XHJcbn1cclxuXHJcbmlvbi1zZWxlY3Qge1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgd2lkdGg6IDkwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgfVxyXG5cclxuICAgIGlvbi10ZXh0YXJlYSB7XHJcblxyXG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgICB9XHJcbiAgICAgIC5kaXZCVHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgICAgIGlvbi1idXR0b24ge1xyXG4gICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5Mb2dpbmJ1dHRvbiB7XHJcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICBpb24tYnV0dG9uIHtcclxuICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGlvbi1sYWJlbHtcclxuICAgICAgLy8gIHBhZGRpbmctbGVmdDogMjBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5lcnJvci1tZXNzYWdle1xyXG4gICAgICAgIGNvbG9yOiAjZjA0MTQxO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMjBweDtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xyXG4gICAgICB9XHJcbiAgICAgIGlvbi1zZWdtZW50LWJ1dHRvbiB7XHJcbiAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgfVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonSlides, AlertController, NavController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LookUpDto } from '../models/LookUps/LookUp';\nimport { LookUps } from '../services/Lookup/LookUps';\nimport { LoginService, MobileLoginInput ,IMobileRegisterInput,MobileRegisterInput,IMobileLoginOrRegisterOutput,MobileLoginOrRegisterOutput  } from '../services/login/login';\nimport { Router } from '@angular/router';\nimport { DataShareService } from '../services/DataShare/data-share.service';\nimport { LoadingService } from '../services/loading/loading.service';\nimport { RegisterAlertMessage, LoginAlertMessage } from '../enums/AlertMessage';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  @ViewChild('slides', { static: false }) slides: IonSlides;\n  //isEditable      : boolean = false;\n  lastSlide: boolean = false;\n  slideIndexNumber: number;\n\n  public title: string;\n  public description: string;\n  public language;\n\n  SignInForm: string = 'SignIn';\n\n  PatientFoem: FormGroup;\n  SignInF : FormGroup;\n\n  validation_messages =\n    {\n      'Required_message': [{ type: 'required', message: 'required.' }],\n    };\n\n  country_Id    : number;\n  region_Id     : number;\n  city_Id       : number;\n  district_Id   : number;\n  ngNationality : string;\n\n  nationalities: LookUpDto[];\n  countries    : LookUpDto[];\n  regions      : LookUpDto[];\n  cities       : LookUpDto[];\n  districts    : LookUpDto[];\n\n  id; loginPhone ;\n\n  newUser : IMobileRegisterInput;\n  FName   : string ;\n  LName   : string ;\n  UserName: string ;\n  R_Phone : string ;\n  Email   : string ;\n\n  mobileRegisterOutput : IMobileLoginOrRegisterOutput;\n\n  messageLoginFaild              : string ;\n  titleLoginMessage              : string ;\n  titleRegisterMessage           : string ;\n  messageRegisterEmailInvalid    : string ;\n  messageRegisterUserNameInvalid : string ;\n\n\n\n  constructor\n    (\n      private _translate : TranslateService,\n      private _lookUp    : LookUps,\n      private _login     : LoginService,\n      private router     : Router,\n      private _dataShare : DataShareService,\n      private _loading   : LoadingService,\n      private alertController: AlertController,\n      private navctrl : NavController ,\n      \n    ) { }\n\n\n  public changeLanguage(): void {\n    console.log(this.language)\n    this._translate.use(this.language);\n  }\n\n\n  ngOnInit() {\n    if(window.localStorage.getItem('lang') === 'ar'){\n     this.validation_messages.Required_message[0].message=\"لا تترك هذا الحقل فارغا\"\n    }\n    this.setupForm();\n    // this.loadNationalities();\n    //this.loadCountries();\n  }\n\n\n  //#region  Validation\n  setupForm() {\n\n    this.SignInF = new FormGroup ({\n      signIn_IdForm : new FormControl('', Validators.compose([Validators.required,])),\n      signInPhone   : new FormControl('', Validators.compose([Validators.required,])),\n    })\n\n    this.PatientFoem = new FormGroup\n      ({\n        FName: new FormControl('', Validators.compose([Validators.required,])),\n        LName: new FormControl('', Validators.compose([Validators.required,])),\n        UserName: new FormControl('', Validators.compose([Validators.required,])),\n        Phone: new FormControl('', Validators.compose([Validators.required,])),\n        Email: new FormControl('', Validators.compose([Validators.required,])),\n      })\n  }\n  //#endregion\n\n\n  login() {\n\n    this._loading.present();\n\n\n    let loginInput: MobileLoginInput = {\n      UserName: this.id,\n      PhoneNumber: this.loginPhone.toString()\n    }\n\n    console.log(loginInput);\n\n    this._login.loginWithNationalIdAndMobile(loginInput).subscribe(data => {\n      this._loading.dismiss();\n\n      this.titleLoginMessage = (this._translate.currentLang == 'ar')  ?  LoginAlertMessage.title_ar :  LoginAlertMessage.title_en;\n      this.messageLoginFaild = (this._translate.currentLang == 'ar')  ?  LoginAlertMessage.messageLoginFaild_ar :  LoginAlertMessage.messageLoginFaild_en;\n\n      console.log(data);\n      if (data.result.status == 1) {\n        this._dataShare.setData(\"loginInfo\",this.id);\n        this.router.navigateByUrl('/login-verification-code/loginInfo');\n      }else\n      this.presentAlert(this.titleLoginMessage ,this.messageLoginFaild );\n     \n    }, error => { \n      this._loading.dismiss();\n      this.presentAlert(this.titleLoginMessage ,this.messageLoginFaild );\n      console.log(error) \n    }\n\n    )\n  }\n\n  slidNext() {\n    this.slides.slideNext();\n    this.slides.isEnd().then(isEnd => {\n      console.log(isEnd)\n    })\n    this.slides.getActiveIndex().then(Index => {\n      console.log(Index)\n      this.slideIndexNumber = Index;\n      this.lastSlide = (Index === 2) ? true : false;\n    })\n\n  }\n\n  slidPrev() {\n    this.slides.slidePrev();\n    this.slides.getActiveIndex().then(Index => {\n      console.log(Index)\n      this.slideIndexNumber = Index;\n      this.lastSlide = (Index === 2) ? true : false;\n    })\n  }\n\n\n  //#region LookUps\n  // loadNationalities() {\n  //   this._lookUp.getAllNationalities(this.to).subscribe(nationalities => {\n  //     this.nationalities = nationalities.result;\n  //     console.log(this.nationalities);\n  //   })\n  // }\n\n  // loadCountries() {\n  //   this._lookUp.getAllCountries().subscribe(\n  //     countries => {\n  //       this.countries = countries.result;\n  //     }\n  //   );\n  //   console.log(this.countries);\n  // }\n\n  // loadRegions(country: LookUpDto) {\n\n  //   this.country_Id = country.value;\n  //   console.log(this.country_Id);\n  //   console.log(country)\n\n  //   this._lookUp.getAllRegions(undefined, country.value).subscribe(\n  //     regions => {\n  //       this.regions = regions.result;\n  //     }\n  //   )\n  //   console.log(this.regions)\n  // }\n\n  // loadCities(region: LookUpDto) {\n\n  //   this.region_Id = region.value;\n  //   console.log(this.region_Id);\n  //   console.log(region)\n\n  //   this._lookUp.getAllCities(undefined, region.value).subscribe(\n  //     cities => {\n  //       this.cities = cities.result;\n  //     }\n  //   )\n  //   console.log(this.cities)\n  // }\n\n  // loadDistricts(city: LookUpDto) {\n\n  //   this.city_Id = city.value;\n  //   console.log(this.city_Id);\n  //   console.log(city)\n\n  //   this._lookUp.getAllDistricts(undefined, city.value).subscribe(\n  //     districts => {\n  //       this.districts = districts.result;\n  //     }\n  //   )\n  //   console.log(this.districts)\n\n  // }\n\n  districtsSelected(district: LookUpDto) {\n    this.district_Id = district.value;\n    console.log(this.district_Id)\n\n  }\n  //#endregion\n\n  registerMobileUser(){\n\n    this._loading.present();\n\n    this.newUser ={\n      name         : this.FName,\n      surname      : this.LName,\n      userName     : this.UserName,\n      emailAddress : this.Email,\n      phoneNumber  : this.R_Phone\n    }\n \n    let user = new MobileRegisterInput(this.newUser);\n\n    console.log(this.newUser)\n\n    this._login.registerMobileUser(user).subscribe((data:any) => {\n      this._loading.dismiss();\n      console.log(data);\n\n      if (data.result.status == 1) {\n        this._dataShare.setData(\"loginInfo\",this.UserName);\n        this.router.navigateByUrl('/login-verification-code/loginInfo');\n        this.mobileRegisterOutput = data.result;\n        console.log(this.mobileRegisterOutput);\n      }\n      else\n      this.presentAlert(\"\",data.result.message);\n    },error => {\n\n      this._loading.dismiss();\n\n      console.log(error)\n      this.titleRegisterMessage           = (this._translate.currentLang == 'ar')  ?  RegisterAlertMessage.title_ar :  RegisterAlertMessage.title_en;\n      this.messageRegisterEmailInvalid    = (this._translate.currentLang == 'ar')  ?  RegisterAlertMessage.messageRegisterEmailInvalid_ar :  RegisterAlertMessage.messageRegisterEmailInvalid_en;\n      this.messageRegisterUserNameInvalid = (this._translate.currentLang == 'ar')  ?  RegisterAlertMessage.messageRegisterUserNameInvalid_ar :  RegisterAlertMessage.messageRegisterUserNameInvalid_en;\n     \n      if(error.error.error.validationErrors)\n        this.presentAlert(this.titleRegisterMessage, this.messageRegisterEmailInvalid)\n      else\n      this.presentAlert(this.titleRegisterMessage, this.messageRegisterUserNameInvalid)\n      \n    })\n  }\n\n  async presentAlert(title:string , message : string ) {\n    const alert = await this.alertController.create({\n      header: title,\n      message: message,\n      buttons: ['OK']\n    });\n  \n    await alert.present();\n  }\n\n  PreviousPage(){\n    this.navctrl.back();\n   // console.log(this.location.path());\n  }\n\n\n}\n"],"sourceRoot":"webpack:///"}