{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, h, e as getElement, H as Host, c as createEvent } from './chunk-84f6bf13.js';\nimport './chunk-1074393c.js';\nimport { a as attachComponent } from './chunk-00265c49.js';\n\nclass Tab {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.loaded = false;\n        /** @internal */\n        this.active = false;\n    }\n    componentWillLoad() {\n    }\n    /** Set the active component for the tab */\n    async setActive() {\n        await this.prepareLazyLoaded();\n        this.active = true;\n    }\n    async prepareLazyLoaded() {\n        if (!this.loaded && this.component != null) {\n            this.loaded = true;\n            try {\n                return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        }\n        return undefined;\n    }\n    hostData() {\n        const { tab, active, component } = this;\n        return {\n            'role': 'tabpanel',\n            'aria-hidden': !active ? 'true' : null,\n            'aria-labelledby': `tab-button-${tab}`,\n            'class': {\n                'ion-page': component === undefined,\n                'tab-hidden': !active\n            }\n        };\n    }\n    __stencil_render() {\n        return h(\"slot\", null);\n    }\n    get el() { return getElement(this); }\n    render() { return h(Host, this.hostData(), this.__stencil_render()); }\n    static get style() { return \":host(.tab-hidden){display:none!important}\"; }\n}\n\n/**\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot top - Content is placed at the top of the screen.\n * @slot bottom - Content is placed at the bottom of the screen.\n */\nclass Tabs {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.transitioning = false;\n        this.tabs = [];\n        /** @internal */\n        this.useRouter = false;\n        this.onTabClicked = (ev) => {\n            const { href, tab } = ev.detail;\n            const selectedTab = this.tabs.find(t => t.tab === tab);\n            if (this.useRouter && href !== undefined) {\n                const router = document.querySelector('ion-router');\n                if (router) {\n                    router.push(href);\n                }\n            }\n            else if (selectedTab) {\n                this.select(selectedTab);\n            }\n        };\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionTabsWillChange = createEvent(this, \"ionTabsWillChange\", 3);\n        this.ionTabsDidChange = createEvent(this, \"ionTabsDidChange\", 3);\n    }\n    componentWillLoad() {\n        if (!this.useRouter) {\n            this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n        }\n        this.tabs = Array.from(this.el.querySelectorAll('ion-tab'));\n        this.initSelect().then(() => {\n            this.ionNavWillLoad.emit();\n            this.componentWillUpdate();\n        });\n    }\n    componentDidUnload() {\n        this.tabs.length = 0;\n        this.selectedTab = this.leavingTab = undefined;\n    }\n    componentWillUpdate() {\n        const tabBar = this.el.querySelector('ion-tab-bar');\n        if (tabBar) {\n            const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n            tabBar.selectedTab = tab;\n        }\n    }\n    /**\n     * Select a tab by the value of its `tab` property or an element reference.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async select(tab) {\n        const selectedTab = await this.getTab(tab);\n        if (!this.shouldSwitch(selectedTab)) {\n            return false;\n        }\n        await this.setActive(selectedTab);\n        await this.notifyRouter();\n        this.tabSwitch();\n        return true;\n    }\n    /**\n     * Get a specific tab by the value of its `tab` property or an element reference.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async getTab(tab) {\n        const tabEl = (typeof tab === 'string')\n            ? this.tabs.find(t => t.tab === tab)\n            : tab;\n        if (!tabEl) {\n            console.error(`tab with id: \"${tabEl}\" does not exist`);\n        }\n        return tabEl;\n    }\n    /**\n     * Get the currently selected tab.\n     */\n    getSelected() {\n        return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n    }\n    /** @internal */\n    async setRouteId(id) {\n        const selectedTab = await this.getTab(id);\n        if (!this.shouldSwitch(selectedTab)) {\n            return { changed: false, element: this.selectedTab };\n        }\n        await this.setActive(selectedTab);\n        return {\n            changed: true,\n            element: this.selectedTab,\n            markVisible: () => this.tabSwitch(),\n        };\n    }\n    /** @internal */\n    async getRouteId() {\n        const tabId = this.selectedTab && this.selectedTab.tab;\n        return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\n    }\n    async initSelect() {\n        if (this.useRouter) {\n            return;\n        }\n        // wait for all tabs to be ready\n        await Promise.all(this.tabs.map(tab => tab.componentOnReady()));\n        await this.select(this.tabs[0]);\n    }\n    setActive(selectedTab) {\n        if (this.transitioning) {\n            return Promise.reject('transitioning already happening');\n        }\n        this.transitioning = true;\n        this.leavingTab = this.selectedTab;\n        this.selectedTab = selectedTab;\n        this.ionTabsWillChange.emit({ tab: selectedTab.tab });\n        return selectedTab.setActive();\n    }\n    tabSwitch() {\n        const selectedTab = this.selectedTab;\n        const leavingTab = this.leavingTab;\n        this.leavingTab = undefined;\n        this.transitioning = false;\n        if (!selectedTab) {\n            return;\n        }\n        if (leavingTab !== selectedTab) {\n            if (leavingTab) {\n                leavingTab.active = false;\n            }\n            this.ionTabsDidChange.emit({ tab: selectedTab.tab });\n        }\n    }\n    notifyRouter() {\n        if (this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                return router.navChanged('forward');\n            }\n        }\n        return Promise.resolve(false);\n    }\n    shouldSwitch(selectedTab) {\n        const leavingTab = this.selectedTab;\n        return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n    }\n    render() {\n        return (h(Host, { onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { name: \"top\" }), h(\"div\", { class: \"tabs-inner\" }, h(\"slot\", null)), h(\"slot\", { name: \"bottom\" })));\n    }\n    get el() { return getElement(this); }\n    static get style() { return \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;z-index:0}.tabs-inner,:host{contain:layout size style}.tabs-inner{position:relative;-ms-flex:1;flex:1}\"; }\n}\n\nexport { Tab as ion_tab, Tabs as ion_tabs };\n"],"sourceRoot":"webpack:///","file":"70-es5.js"}